{"version":3,"sources":["socket.js","components/Main/Main.js","components/Video/VideoCard.js","components/BottomBar/BottomBar.js","components/Chat/Chat.js","components/Room/Room.js","App.js","serviceWorker.js","index.js"],"names":["sockets","io","MainContainer","styled","div","Row","Label","label","Input","input","Error","JoinButton","button","Main","props","roomRef","useRef","userRef","useState","err","setErr","errMsg","setErrMsg","useEffect","socket","on","error","roomName","current","value","userName","sessionStorage","setItem","history","push","htmlFor","type","id","ref","onClick","emit","roomId","Video","video","VideoCard","peer","stream","srcObject","track","playsInline","autoPlay","Bar","Left","Center","Right","ChatButton","ScreenButton","FaIcon","i","StopButton","CameraButton","SwitchMenu","SwitchList","BottomBar","clickChat","clickCameraDevice","goToBack","toggleCameraAudio","userVideoAudio","clickScreenSharing","screenShare","videoDevices","showVideoDevices","setShowVideoDevices","handleToggle","useCallback","e","state","data-switch","className","length","map","device","key","deviceId","data-value","audio","ChatContainer","TopHeader","ChatArea","MessageList","Message","UserMessage","BottomInput","Chat","display","currentUser","getItem","msg","setMsg","messagesEndRef","inputRef","sender","msgs","scrollToBottom","scrollIntoView","behavior","idx","style","float","clear","onKeyUp","target","placeholder","RoomContainer","VideoContainer","VideoAndBarContainer","MyVideo","VideoBox","UserName","Room","peers","setPeers","localUser","setUserVideoAudio","setVideoDevices","displayChat","setDisplayChat","setScreenShare","peersRef","userVideoRef","screenTrackRef","userStream","match","params","findPeer","find","p","peerID","createUserVideo","index","arr","expandScreen","hasOwnProperty","writeUserName","number","navigator","mediaDevices","enumerateDevices","then","devices","filtered","filter","kind","window","addEventListener","getUserMedia","users","forEach","userId","info","caller","Peer","initiator","trickle","signal","userToCall","from","destroy","createPeer","preList","incomingSignal","callerId","to","addPeer","answerId","peerIdx","user","switchTarget","disconnect","preventDefault","leaver","removeItem","location","href","elem","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","muted","playInline","onended","getDisplayMedia","cursor","screenTrack","getTracks","replaceTrack","streams","stopPropagation","event","dataset","enabledAudio","getAudioTracks","enabled","newStreamTrack","oldStreamTrack","removeTrack","addTrack","getAttribute","videoSwitch","audioSwitch","getVideoTracks","userAudioTrack","AppContainer","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b2f58401.chunk.js","sourcesContent":["import io from 'socket.io-client';\r\n// const sockets = io('http://localhost:3001', { autoConnect: true, forceNew: true });\r\nconst sockets = io('/');\r\nexport default sockets;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport socket from '../../socket';\r\n\r\nconst Main = (props) => {\r\n  const roomRef = useRef();\r\n  const userRef = useRef();\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n\r\n  useEffect(() => {\r\n\r\n    socket.on('FE-error-user-exist', ({ error }) => {\r\n      if (!error) {\r\n        const roomName = roomRef.current.value;\r\n        const userName = userRef.current.value;\r\n\r\n        sessionStorage.setItem('user', userName);\r\n        props.history.push(`/room/${roomName}`);\r\n      } else {\r\n        setErr(error);\r\n        setErrMsg('User name already exist');\r\n      }\r\n    });\r\n  }, [props.history]);\r\n\r\n  function clickJoin() {\r\n    const roomName = roomRef.current.value;\r\n    const userName = userRef.current.value;\r\n\r\n    if (!roomName || !userName) {\r\n      setErr(true);\r\n      setErrMsg('Enter Room Name or User Name');\r\n    } else {\r\n      socket.emit('BE-check-user', { roomId: roomName, userName });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Row>\r\n        <Label htmlFor=\"roomName\">Room Name</Label>\r\n        <Input type=\"text\" id=\"roomName\" ref={roomRef} />\r\n      </Row>\r\n      <Row>\r\n        <Label htmlFor=\"userName\">User Name</Label>\r\n        <Input type=\"text\" id=\"userName\" ref={userRef} />\r\n      </Row>\r\n      <JoinButton onClick={clickJoin}> Join </JoinButton>\r\n      {err ? <Error>{errMsg}</Error> : null}\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nconst MainContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  margin-top: 15px;\r\n  line-height: 35px;\r\n`;\r\n\r\nconst Label = styled.label``;\r\n\r\nconst Input = styled.input`\r\n  width: 150px;\r\n  height: 35px;\r\n  margin-left: 15px;\r\n  padding-left: 10px;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Error = styled.div`\r\n  margin-top: 10px;\r\n  font-size: 20px;\r\n  color: #e85a71;\r\n`;\r\n\r\nconst JoinButton = styled.button`\r\n  height: 40px;\r\n  margin-top: 35px;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 15px;\r\n  color: #d8e9ef;\r\n  background-color: #4ea1d3;\r\n  font-size: 25px;\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    background-color: #7bb1d1;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default Main;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nconst VideoCard = (props) => {\r\n  const ref = useRef();\r\n  const peer = props.peer;\r\n\r\n  useEffect(() => {\r\n    peer.on('stream', (stream) => {\r\n      ref.current.srcObject = stream;\r\n    });\r\n    peer.on('track', (track, stream) => {\r\n    });\r\n  }, [peer]);\r\n\r\n  return (\r\n    <Video\r\n      playsInline\r\n      autoPlay\r\n      ref={ref}\r\n    />\r\n  );\r\n};\r\n\r\nconst Video = styled.video``;\r\n\r\nexport default VideoCard;\r\n","import React, { useCallback } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst BottomBar = ({\r\n  clickChat,\r\n  clickCameraDevice,\r\n  goToBack,\r\n  toggleCameraAudio,\r\n  userVideoAudio,\r\n  clickScreenSharing,\r\n  screenShare,\r\n  videoDevices,\r\n  showVideoDevices,\r\n  setShowVideoDevices\r\n}) => {\r\n  const handleToggle = useCallback(\r\n    (e) => {\r\n      setShowVideoDevices((state) => !state);\r\n    },\r\n    [setShowVideoDevices]\r\n  );\r\n\r\n  return (\r\n    <Bar>\r\n      <Left>\r\n        <CameraButton onClick={toggleCameraAudio} data-switch='video'>\r\n          <div>\r\n            {userVideoAudio.video ? (\r\n              <FaIcon className='fas fa-video'></FaIcon>\r\n            ) : (\r\n              <FaIcon className='fas fa-video-slash'></FaIcon>\r\n            )}\r\n          </div>\r\n          Camera\r\n        </CameraButton>\r\n        {showVideoDevices && (\r\n          <SwitchList>\r\n            {videoDevices.length > 0 &&\r\n              videoDevices.map((device) => {\r\n                return <div key={device.deviceId} onClick={clickCameraDevice} data-value={device.deviceId} >{device.label}</div>;\r\n              })}\r\n            <div>Switch Camera</div>\r\n          </SwitchList>\r\n        )}\r\n        <SwitchMenu onClick={handleToggle}>\r\n          <i className='fas fa-angle-up'></i>\r\n        </SwitchMenu>\r\n        <CameraButton onClick={toggleCameraAudio} data-switch='audio'>\r\n          <div>\r\n            {userVideoAudio.audio ? (\r\n              <FaIcon className='fas fa-microphone'></FaIcon>\r\n            ) : (\r\n              <FaIcon className='fas fa-microphone-slash'></FaIcon>\r\n            )}\r\n          </div>\r\n          Audio\r\n        </CameraButton>\r\n      </Left>\r\n      <Center>\r\n        <ChatButton onClick={clickChat}>\r\n          <div>\r\n            <FaIcon className='fas fa-comments'></FaIcon>\r\n          </div>\r\n          Chat\r\n        </ChatButton>\r\n        <ScreenButton onClick={clickScreenSharing}>\r\n          <div>\r\n            <FaIcon\r\n              className={`fas fa-desktop ${screenShare ? 'sharing' : ''}`}\r\n            ></FaIcon>\r\n          </div>\r\n          Share Screen\r\n        </ScreenButton>\r\n      </Center>\r\n      <Right>\r\n        <StopButton onClick={goToBack}>Stop</StopButton>\r\n      </Right>\r\n    </Bar>\r\n  );\r\n};\r\n\r\nconst Bar = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 8%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: 500;\r\n  background-color: #4ea1d3;\r\n`;\r\nconst Left = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  margin-left: 15px;\r\n`;\r\n\r\nconst Center = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Right = styled.div``;\r\n\r\nconst ChatButton = styled.div`\r\n  width: 75px;\r\n  border: none;\r\n  font-size: 0.9375rem;\r\n  padding: 5px;\r\n\r\n  :hover {\r\n    background-color: #77b7dd;\r\n    cursor: pointer;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  * {\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nconst ScreenButton = styled.div`\r\n  width: auto;\r\n  border: none;\r\n  font-size: 0.9375rem;\r\n  padding: 5px;\r\n\r\n  :hover {\r\n    background-color: #77b7dd;\r\n    cursor: pointer;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  .sharing {\r\n    color: #ee2560;\r\n  }\r\n`;\r\n\r\nconst FaIcon = styled.i`\r\n  width: 30px;\r\n  font-size: calc(16px + 1vmin);\r\n`;\r\n\r\nconst StopButton = styled.div`\r\n  width: 75px;\r\n  height: 30px;\r\n  border: none;\r\n  font-size: 0.9375rem;\r\n  line-height: 30px;\r\n  margin-right: 15px;\r\n  background-color: #ee2560;\r\n  border-radius: 15px;\r\n\r\n  :hover {\r\n    background-color: #f25483;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst CameraButton = styled.div`\r\n  position: relative;\r\n  width: 75px;\r\n  border: none;\r\n  font-size: 0.9375rem;\r\n  padding: 5px;\r\n\r\n  :hover {\r\n    background-color: #77b7dd;\r\n    cursor: pointer;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  * {\r\n    pointer-events: none;\r\n  }\r\n\r\n  .fa-microphone-slash {\r\n    color: #ee2560;\r\n  }\r\n\r\n  .fa-video-slash {\r\n    color: #ee2560;\r\n  }\r\n`;\r\n\r\nconst SwitchMenu = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  width: 20px;\r\n  top: 7px;\r\n  left: 80px;\r\n  z-index: 1;\r\n\r\n  :hover {\r\n    background-color: #476d84;\r\n    cursor: pointer;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  * {\r\n    pointer-events: none;\r\n  }\r\n\r\n  > i {\r\n    width: 90%;\r\n    font-size: calc(10px + 1vmin);\r\n  }\r\n`;\r\n\r\nconst SwitchList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: -65.95px;\r\n  left: 80px;\r\n  background-color: #4ea1d3;\r\n  color: white;\r\n  padding-top: 5px;\r\n  padding-right: 10px;\r\n  padding-bottom: 5px;\r\n  padding-left: 10px;\r\n  text-align: left;\r\n\r\n  > div {\r\n    font-size: 0.85rem;\r\n    padding: 1px;\r\n    margin-bottom: 5px;\r\n\r\n    :not(:last-child):hover {\r\n      background-color: #77b7dd;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  > div:last-child {\r\n    border-top: 1px solid white;\r\n    cursor: context-menu !important;\r\n  }\r\n`;\r\n\r\nexport default BottomBar;","import React, { useEffect, useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport socket from '../../socket';\r\n\r\nconst Chat = ({ display, roomId }) => {\r\n  const currentUser = sessionStorage.getItem('user');\r\n  const [msg, setMsg] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n  const inputRef = useRef();\r\n  \r\n  useEffect(() => {\r\n    socket.on('FE-receive-message', ({ msg, sender }) => {\r\n      setMsg((msgs) => [...msgs, { sender, msg }]);\r\n    });\r\n  }, []);\r\n\r\n  // Scroll to Bottom of Message List\r\n  useEffect(() => {scrollToBottom()}, [msg])\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth'});\r\n  }\r\n\r\n  const sendMessage = (e) => {\r\n    if (e.key === 'Enter') {\r\n      const msg = e.target.value;\r\n\r\n      if (msg) {\r\n        socket.emit('BE-send-message', { roomId, msg, sender: currentUser });\r\n        inputRef.current.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatContainer className={display ? '' : 'width0'}>\r\n      <TopHeader>Group Chat Room</TopHeader>\r\n      <ChatArea>\r\n        <MessageList>\r\n          {msg &&\r\n            msg.map(({ sender, msg }, idx) => {\r\n              if (sender !== currentUser) {\r\n                return (\r\n                  <Message key={idx}>\r\n                    <strong>{sender}</strong>\r\n                    <p>{msg}</p>\r\n                  </Message>\r\n                );\r\n              } else {\r\n                return (\r\n                  <UserMessage key={idx}>\r\n                    <strong>{sender}</strong>\r\n                    <p>{msg}</p>\r\n                  </UserMessage>\r\n                );\r\n              }\r\n            })}\r\n            <div style={{float:'left', clear: 'both'}} ref={messagesEndRef} />\r\n        </MessageList>\r\n      </ChatArea>\r\n      <BottomInput\r\n        ref={inputRef}\r\n        onKeyUp={sendMessage}\r\n        placeholder=\"Enter your message\"\r\n      />\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nconst ChatContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 25%;\r\n  hieght: 100%;\r\n  background-color: white;\r\n  transition: all 0.5s ease;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst TopHeader = styled.div`\r\n  width: 100%;\r\n  margin-top: 15px;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  color: black;\r\n`;\r\n\r\nconst ChatArea = styled.div`\r\n  width: 100%;\r\n  height: 83%;\r\n  max-height: 83%;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst MessageList = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n  color: #454552;\r\n`;\r\n\r\nconst Message = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-size: 16px;\r\n  margin-top: 15px;\r\n  margin-left: 15px;\r\n  text-align: left;\r\n\r\n  > strong {\r\n    margin-left: 3px;\r\n  }\r\n\r\n  > p {\r\n    max-width: 65%;\r\n    width: auto;\r\n    padding: 9px;\r\n    margin-top: 3px;\r\n    border: 1px solid rgb(78, 161, 211, 0.3);\r\n    border-radius: 15px;\r\n    box-shadow: 0px 0px 3px #4ea1d3;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst UserMessage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n  font-size: 16px;\r\n  margin-top: 15px;\r\n  text-align: right;\r\n\r\n  > strong {\r\n    margin-right: 35px;\r\n  }\r\n\r\n  > p {\r\n    max-width: 65%;\r\n    width: auto;\r\n    padding: 9px;\r\n    margin-top: 3px;\r\n    margin-right: 30px;\r\n    border: 1px solid rgb(78, 161, 211, 0.3);\r\n    border-radius: 15px;\r\n    background-color: #4ea1d3;\r\n    color: white;\r\n    font-size: 14px;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst BottomInput = styled.input`\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 8%;\r\n  padding: 15px;\r\n  border-top: 1px solid rgb(69, 69, 82, 0.25);\r\n  box-sizing: border-box;\r\n  opacity: 0.7;\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Peer from 'simple-peer';\r\nimport styled from 'styled-components';\r\nimport socket from '../../socket';\r\nimport VideoCard from '../Video/VideoCard';\r\nimport BottomBar from '../BottomBar/BottomBar';\r\nimport Chat from '../Chat/Chat';\r\n\r\nconst Room = (props) => {\r\n  const currentUser = sessionStorage.getItem('user');\r\n  const [peers, setPeers] = useState([]);\r\n  const [userVideoAudio, setUserVideoAudio] = useState({\r\n    localUser: { video: true, audio: true },\r\n  });\r\n  const [videoDevices, setVideoDevices] = useState([]);\r\n  const [displayChat, setDisplayChat] = useState(false);\r\n  const [screenShare, setScreenShare] = useState(false);\r\n  const [showVideoDevices, setShowVideoDevices] = useState(false);\r\n  const peersRef = useRef([]);\r\n  const userVideoRef = useRef();\r\n  const screenTrackRef = useRef();\r\n  const userStream = useRef();\r\n  const roomId = props.match.params.roomId;\r\n\r\n  useEffect(() => {\r\n    // Get Video Devices\r\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\r\n      const filtered = devices.filter((device) => device.kind === 'videoinput');\r\n      setVideoDevices(filtered);\r\n    });\r\n\r\n    // Set Back Button Event\r\n    window.addEventListener('popstate', goToBack);\r\n\r\n    // Connect Camera & Mic\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        userVideoRef.current.srcObject = stream;\r\n        userStream.current = stream;\r\n\r\n        socket.emit('BE-join-room', { roomId, userName: currentUser });\r\n        socket.on('FE-user-join', (users) => {\r\n          // all users\r\n          const peers = [];\r\n          users.forEach(({ userId, info }) => {\r\n            let { userName, video, audio } = info;\r\n\r\n            if (userName !== currentUser) {\r\n              const peer = createPeer(userId, socket.id, stream);\r\n\r\n              peer.userName = userName;\r\n              peer.peerID = userId;\r\n\r\n              peersRef.current.push({\r\n                peerID: userId,\r\n                peer,\r\n                userName,\r\n              });\r\n              peers.push(peer);\r\n\r\n              setUserVideoAudio((preList) => {\r\n                return {\r\n                  ...preList,\r\n                  [peer.userName]: { video, audio },\r\n                };\r\n              });\r\n            }\r\n          });\r\n\r\n          setPeers(peers);\r\n        });\r\n\r\n        socket.on('FE-receive-call', ({ signal, from, info }) => {\r\n          let { userName, video, audio } = info;\r\n          const peerIdx = findPeer(from);\r\n\r\n          if (!peerIdx) {\r\n            const peer = addPeer(signal, from, stream);\r\n\r\n            peer.userName = userName;\r\n\r\n            peersRef.current.push({\r\n              peerID: from,\r\n              peer,\r\n              userName: userName,\r\n            });\r\n            setPeers((users) => {\r\n              return [...users, peer];\r\n            });\r\n            setUserVideoAudio((preList) => {\r\n              return {\r\n                ...preList,\r\n                [peer.userName]: { video, audio },\r\n              };\r\n            });\r\n          }\r\n        });\r\n\r\n        socket.on('FE-call-accepted', ({ signal, answerId }) => {\r\n          const peerIdx = findPeer(answerId);\r\n          peerIdx.peer.signal(signal);\r\n        });\r\n\r\n        socket.on('FE-user-leave', ({ userId, userName }) => {\r\n          const peerIdx = findPeer(userId);\r\n          peerIdx.peer.destroy();\r\n          setPeers((users) => {\r\n            users = users.filter((user) => user.peerID !== peerIdx.peer.peerID);\r\n            return [...users];\r\n          });\r\n          peersRef.current = peersRef.current.filter(({ peerID }) => peerID !== userId );\r\n        });\r\n      });\r\n\r\n    socket.on('FE-toggle-camera', ({ userId, switchTarget }) => {\r\n      const peerIdx = findPeer(userId);\r\n\r\n      setUserVideoAudio((preList) => {\r\n        let video = preList[peerIdx.userName].video;\r\n        let audio = preList[peerIdx.userName].audio;\r\n\r\n        if (switchTarget === 'video') video = !video;\r\n        else audio = !audio;\r\n\r\n        return {\r\n          ...preList,\r\n          [peerIdx.userName]: { video, audio },\r\n        };\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function createPeer(userId, caller, stream) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on('signal', (signal) => {\r\n      socket.emit('BE-call-user', {\r\n        userToCall: userId,\r\n        from: caller,\r\n        signal,\r\n      });\r\n    });\r\n    peer.on('disconnect', () => {\r\n      peer.destroy();\r\n    });\r\n\r\n    return peer;\r\n  }\r\n\r\n  function addPeer(incomingSignal, callerId, stream) {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on('signal', (signal) => {\r\n      socket.emit('BE-accept-call', { signal, to: callerId });\r\n    });\r\n\r\n    peer.on('disconnect', () => {\r\n      peer.destroy();\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n\r\n    return peer;\r\n  }\r\n\r\n  function findPeer(id) {\r\n    return peersRef.current.find((p) => p.peerID === id);\r\n  }\r\n\r\n  function createUserVideo(peer, index, arr) {\r\n    return (\r\n      <VideoBox\r\n        className={`width-peer${peers.length > 8 ? '' : peers.length}`}\r\n        onClick={expandScreen}\r\n        key={index}\r\n      >\r\n        {writeUserName(peer.userName)}\r\n        <FaIcon className='fas fa-expand' />\r\n        <VideoCard key={index} peer={peer} number={arr.length} />\r\n      </VideoBox>\r\n    );\r\n  }\r\n\r\n  function writeUserName(userName, index) {\r\n    if (userVideoAudio.hasOwnProperty(userName)) {\r\n      if (!userVideoAudio[userName].video) {\r\n        return <UserName key={userName}>{userName}</UserName>;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Open Chat\r\n  const clickChat = (e) => {\r\n    e.stopPropagation();\r\n    setDisplayChat(!displayChat);\r\n  };\r\n\r\n  // BackButton\r\n  const goToBack = (e) => {\r\n    e.preventDefault();\r\n    socket.emit('BE-leave-room', { roomId, leaver: currentUser });\r\n    sessionStorage.removeItem('user');\r\n    window.location.href = '/';\r\n  };\r\n\r\n  const toggleCameraAudio = (e) => {\r\n    const target = e.target.getAttribute('data-switch');\r\n\r\n    setUserVideoAudio((preList) => {\r\n      let videoSwitch = preList['localUser'].video;\r\n      let audioSwitch = preList['localUser'].audio;\r\n\r\n      if (target === 'video') {\r\n        const userVideoTrack = userVideoRef.current.srcObject.getVideoTracks()[0];\r\n        videoSwitch = !videoSwitch;\r\n        userVideoTrack.enabled = videoSwitch;\r\n      } else {\r\n        const userAudioTrack = userVideoRef.current.srcObject.getAudioTracks()[0];\r\n        audioSwitch = !audioSwitch;\r\n\r\n        if (userAudioTrack) {\r\n          userAudioTrack.enabled = audioSwitch;\r\n        } else {\r\n          userStream.current.getAudioTracks()[0].enabled = audioSwitch;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...preList,\r\n        localUser: { video: videoSwitch, audio: audioSwitch },\r\n      };\r\n    });\r\n\r\n    socket.emit('BE-toggle-camera-audio', { roomId, switchTarget: target });\r\n  };\r\n\r\n  const clickScreenSharing = () => {\r\n    if (!screenShare) {\r\n      navigator.mediaDevices\r\n        .getDisplayMedia({ cursor: true })\r\n        .then((stream) => {\r\n          const screenTrack = stream.getTracks()[0];\r\n\r\n          peersRef.current.forEach(({ peer }) => {\r\n            // replaceTrack (oldTrack, newTrack, oldStream);\r\n            peer.replaceTrack(\r\n              peer.streams[0]\r\n                .getTracks()\r\n                .find((track) => track.kind === 'video'),\r\n              screenTrack,\r\n              userStream.current\r\n            );\r\n          });\r\n\r\n          // Listen click end\r\n          screenTrack.onended = () => {\r\n            peersRef.current.forEach(({ peer }) => {\r\n              peer.replaceTrack(\r\n                screenTrack,\r\n                peer.streams[0]\r\n                  .getTracks()\r\n                  .find((track) => track.kind === 'video'),\r\n                userStream.current\r\n              );\r\n            });\r\n            userVideoRef.current.srcObject = userStream.current;\r\n            setScreenShare(false);\r\n          };\r\n\r\n          userVideoRef.current.srcObject = stream;\r\n          screenTrackRef.current = screenTrack;\r\n          setScreenShare(true);\r\n        });\r\n    } else {\r\n      screenTrackRef.current.onended();\r\n    }\r\n  };\r\n\r\n  const expandScreen = (e) => {\r\n    const elem = e.target;\r\n\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.mozRequestFullScreen) {\r\n      /* Firefox */\r\n      elem.mozRequestFullScreen();\r\n    } else if (elem.webkitRequestFullscreen) {\r\n      /* Chrome, Safari & Opera */\r\n      elem.webkitRequestFullscreen();\r\n    } else if (elem.msRequestFullscreen) {\r\n      /* IE/Edge */\r\n      elem.msRequestFullscreen();\r\n    }\r\n  };\r\n\r\n  const clickBackground = () => {\r\n    if (!showVideoDevices) return;\r\n\r\n    setShowVideoDevices(false);\r\n  };\r\n\r\n  const clickCameraDevice = (event) => {\r\n    if (event && event.target && event.target.dataset && event.target.dataset.value) {\r\n      const deviceId = event.target.dataset.value;\r\n      const enabledAudio = userVideoRef.current.srcObject.getAudioTracks()[0].enabled;\r\n\r\n      navigator.mediaDevices\r\n        .getUserMedia({ video: { deviceId }, audio: enabledAudio })\r\n        .then((stream) => {\r\n          const newStreamTrack = stream.getTracks().find((track) => track.kind === 'video');\r\n          const oldStreamTrack = userStream.current\r\n            .getTracks()\r\n            .find((track) => track.kind === 'video');\r\n\r\n          userStream.current.removeTrack(oldStreamTrack);\r\n          userStream.current.addTrack(newStreamTrack);\r\n\r\n          peersRef.current.forEach(({ peer }) => {\r\n            // replaceTrack (oldTrack, newTrack, oldStream);\r\n            peer.replaceTrack(\r\n              oldStreamTrack,\r\n              newStreamTrack,\r\n              userStream.current\r\n            );\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RoomContainer onClick={clickBackground}>\r\n      <VideoAndBarContainer>\r\n        <VideoContainer>\r\n          {/* Current User Video */}\r\n          <VideoBox\r\n            className={`width-peer${peers.length > 8 ? '' : peers.length}`}\r\n          >\r\n            {userVideoAudio['localUser'].video ? null : (\r\n              <UserName>{currentUser}</UserName>\r\n            )}\r\n            <FaIcon className='fas fa-expand' />\r\n            <MyVideo\r\n              onClick={expandScreen}\r\n              ref={userVideoRef}\r\n              muted\r\n              autoPlay\r\n              playInline\r\n            ></MyVideo>\r\n          </VideoBox>\r\n          {/* Joined User Vidoe */}\r\n          {peers &&\r\n            peers.map((peer, index, arr) => createUserVideo(peer, index, arr))}\r\n        </VideoContainer>\r\n        <BottomBar\r\n          clickScreenSharing={clickScreenSharing}\r\n          clickChat={clickChat}\r\n          clickCameraDevice={clickCameraDevice}\r\n          goToBack={goToBack}\r\n          toggleCameraAudio={toggleCameraAudio}\r\n          userVideoAudio={userVideoAudio['localUser']}\r\n          screenShare={screenShare}\r\n          videoDevices={videoDevices}\r\n          showVideoDevices={showVideoDevices}\r\n          setShowVideoDevices={setShowVideoDevices}\r\n        />\r\n      </VideoAndBarContainer>\r\n      <Chat display={displayChat} roomId={roomId} />\r\n    </RoomContainer>\r\n  );\r\n};\r\n\r\nconst RoomContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-height: 100vh;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\n  max-width: 100%;\r\n  height: 92%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n  gap: 10px;\r\n`;\r\n\r\nconst VideoAndBarContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst MyVideo = styled.video``;\r\n\r\nconst VideoBox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  > video {\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  :hover {\r\n    > i {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  position: absolute;\r\n  font-size: calc(20px + 5vmin);\r\n  z-index: 1;\r\n`;\r\n\r\nconst FaIcon = styled.i`\r\n  display: none;\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 15px;\r\n`;\r\n\r\nexport default Room;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Main from './components/Main/Main';\r\nimport Room from './components/Room/Room'\r\nimport styled from 'styled-components';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <AppContainer>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Main} />\r\n          <Route exact path=\"/room/:roomId\" component={Room} />\r\n        </Switch>\r\n      </AppContainer>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: calc(8px + 2vmin);\r\n  color: white;\r\n  background-color: #454552;\r\n  text-align: center;\r\n`;\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}